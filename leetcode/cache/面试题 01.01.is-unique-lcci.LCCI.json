{"id":100158,"fid":"面试题 01.01","name":"判定字符是否唯一","slug":"is-unique-lcci","link":"https://leetcode.cn/problems/is-unique-lcci/description/","percent":71.4532758440997,"level":"Easy","category":"LCCI","en_name":"Is Unique LCCI","cn_name":"判定字符是否唯一","totalAC":"186K","totalSubmit":"260.3K","likes":354,"dislikes":0,"desc":"<p>实现一个算法，确定一个字符串 <code>s</code> 的所有字符是否全都不同。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> <code>s</code> = \"leetcode\"\n<strong>输出:</strong> false \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入:</strong> <code>s</code> = \"abc\"\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>限制：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(s) &lt;= 100 </code></li>\n\t<li><code>s[i]</code>仅包含小写字母</li>\n\t<li>如果你不使用额外的数据结构，会很加分。</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isUnique(string astr) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isUnique(String astr) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isUnique(self, astr):\n        \"\"\"\n        :type astr: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isUnique(self, astr: str) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool isUnique(char* astr) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsUnique(string astr) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} astr\n * @return {boolean}\n */\nvar isUnique = function(astr) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function isUnique(astr: string): boolean {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $astr\n     * @return Boolean\n     */\n    function isUnique($astr) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isUnique(_ astr: String) -> Bool {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isUnique(astr: String): Boolean {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool isUnique(String astr) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func isUnique(astr string) bool {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} astr\n# @return {Boolean}\ndef is_unique(astr)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isUnique(astr: String): Boolean = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn is_unique(astr: String) -> bool {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (is-unique astr)\n  (-> string? boolean?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec is_unique(Astr :: unicode:unicode_binary()) -> boolean().\nis_unique(Astr) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec is_unique(astr :: String.t) :: boolean\n  def is_unique(astr) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func isUnique(astr: String): Bool {\n\n    }\n}"}],"testcase":"\"leetcode\"","testable":true,"templateMeta":{"name":"isUnique","params":[{"name":"astr","type":"string"}],"return":{"type":"boolean"}}}