{"id":240,"fid":"240","name":"搜索二维矩阵 II","slug":"search-a-2d-matrix-ii","link":"https://leetcode.cn/problems/search-a-2d-matrix-ii/description/","percent":56.27281350153806,"level":"Medium","category":"algorithms","en_name":"Search a 2D Matrix II","cn_name":"搜索二维矩阵 II","totalAC":"707.8K","totalSubmit":"1.3M","likes":1722,"dislikes":0,"desc":"<p>编写一个高效的算法来搜索&nbsp;<code><em>m</em>&nbsp;x&nbsp;<em>n</em></code>&nbsp;矩阵 <code>matrix</code> 中的一个目标值 <code>target</code> 。该矩阵具有以下特性：</p>\n\n<ul>\n\t<li>每行的元素从左到右升序排列。</li>\n\t<li>每列的元素从上到下升序排列。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>示例 1：</b></p>\n<img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid2.jpg\" />\n<pre>\n<b>输入：</b>matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\n<b>输出：</b>true\n</pre>\n\n<p><b>示例 2：</b></p>\n<img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/11/25/searchgrid.jpg\" />\n<pre>\n<b>输入：</b>matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20\n<b>输出：</b>false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 300</code></li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= matrix[i][j] &lt;= 10<sup>9</sup></code></li>\n\t<li>每行的所有元素从左到右升序排列</li>\n\t<li>每列的所有元素从上到下升序排列</li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        \n    }\n}"},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        "},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def searchMatrix(self, matrix, target):\n        \"\"\"\n        :type matrix: List[List[int]]\n        :type target: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\nvar searchMatrix = function(matrix, target) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function searchMatrix(matrix: number[][], target: number): boolean {\n\n};"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool SearchMatrix(int[][] matrix, int target) {\n        \n    }\n}"},{"value":"c","text":"C","defaultCode":"\n\nbool searchMatrix(int** matrix, int matrixSize, int* matrixColSize, int target){\n\n}"},{"value":"golang","text":"Go","defaultCode":"func searchMatrix(matrix [][]int, target int) bool {\n    \n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun searchMatrix(matrix: Array<IntArray>, target: Int): Boolean {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func searchMatrix(_ matrix: [[Int]], _ target: Int) -> Bool {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn search_matrix(matrix: Vec<Vec<i32>>, target: i32) -> bool {\n        \n    }\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} matrix\n# @param {Integer} target\n# @return {Boolean}\ndef search_matrix(matrix, target)\n    \nend"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $matrix\n     * @param Integer $target\n     * @return Boolean\n     */\n    function searchMatrix($matrix, $target) {\n        \n    }\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def searchMatrix(matrix: Array[Array[Int]], target: Int): Boolean = {\n        \n    }\n}"}],"testcase":"[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]\n5","testable":true,"templateMeta":{"name":"searchMatrix","params":[{"name":"matrix","type":"integer[][]"},{"name":"target","type":"integer"}],"return":{"type":"boolean"},"manual":true}}