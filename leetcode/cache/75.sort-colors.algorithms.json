{"id":75,"fid":"75","name":"颜色分类","slug":"sort-colors","link":"https://leetcode.cn/problems/sort-colors/description/","percent":63.14937840728664,"level":"Medium","category":"algorithms","en_name":"Sort Colors","cn_name":"颜色分类","totalAC":"853.1K","totalSubmit":"1.4M","likes":1986,"dislikes":0,"desc":"<p>给定一个包含红色、白色和蓝色、共&nbsp;<code>n</code><em> </em>个元素的数组<meta charset=\"UTF-8\" />&nbsp;<code>nums</code>&nbsp;，<strong><a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\" target=\"_blank\">原地</a>&nbsp;</strong>对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。</p>\n\n<p>我们使用整数 <code>0</code>、&nbsp;<code>1</code> 和 <code>2</code> 分别表示红色、白色和蓝色。</p>\n\n<ul>\n</ul>\n\n<p>必须在不使用库内置的 sort 函数的情况下解决这个问题。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,0,2,1,1,0]\n<strong>输出：</strong>[0,0,1,1,2,2]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,0,1]\n<strong>输出：</strong>[0,1,2]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>nums[i]</code> 为 <code>0</code>、<code>1</code> 或 <code>2</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong></p>\n\n<ul>\n\t<li>你能想出一个仅使用常数空间的一趟扫描算法吗？</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    void sortColors(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public void sortColors(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def sortColors(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def sortColors(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"void sortColors(int* nums, int numsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public void SortColors(int[] nums) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar sortColors = function(nums) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"/**\n Do not return anything, modify nums in-place instead.\n */\nfunction sortColors(nums: number[]): void {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function sortColors(&$nums) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func sortColors(_ nums: inout [Int]) {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun sortColors(nums: IntArray): Unit {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  void sortColors(List<int> nums) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func sortColors(nums []int)  {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef sort_colors(nums)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def sortColors(nums: Array[Int]): Unit = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn sort_colors(nums: &mut Vec<i32>) {\n        \n    }\n}"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func sortColors(nums: Array<Int64>): Unit {\n\n    }\n}"}],"testcase":"[2,0,2,1,1,0]","testable":true,"templateMeta":{"name":"sortColors","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"void"},"output":{"paramindex":0},"manual":false}}