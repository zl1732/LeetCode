{"id":957,"fid":"921","name":"使括号有效的最少添加","slug":"minimum-add-to-make-parentheses-valid","link":"https://leetcode.cn/problems/minimum-add-to-make-parentheses-valid/description/","percent":73.24752114982262,"level":"Medium","category":"algorithms","en_name":"Minimum Add to Make Parentheses Valid","cn_name":"使括号有效的最少添加","totalAC":"80.6K","totalSubmit":"110K","likes":277,"dislikes":0,"desc":"<p>只有满足下面几点之一，括号字符串才是有效的：</p>\n\n<ul>\n\t<li>它是一个空字符串，或者</li>\n\t<li>它可以被写成&nbsp;<code>AB</code>&nbsp;（<code>A</code>&nbsp;与&nbsp;<code>B</code>&nbsp;连接）, 其中&nbsp;<code>A</code> 和&nbsp;<code>B</code>&nbsp;都是有效字符串，或者</li>\n\t<li>它可以被写作&nbsp;<code>(A)</code>，其中&nbsp;<code>A</code>&nbsp;是有效字符串。</li>\n</ul>\n\n<p>给定一个括号字符串 <code>s</code> ，在每一次操作中，你都可以在字符串的任何位置插入一个括号</p>\n\n<ul>\n\t<li>例如，如果 <code>s = \"()))\"</code> ，你可以插入一个开始括号为 <code>\"(()))\"</code> 或结束括号为 <code>\"())))\"</code> 。</li>\n</ul>\n\n<p>返回 <em>为使结果字符串 <code>s</code> 有效而必须添加的最少括号数</em>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"())\"\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"(((\"\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> 只包含&nbsp;<code>'('</code> 和&nbsp;<code>')'</code>&nbsp;字符。</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minAddToMakeValid(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minAddToMakeValid(String s) {\n        \n    }\n}"},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minAddToMakeValid(self, s: str) -> int:\n        "},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minAddToMakeValid(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {number}\n */\nvar minAddToMakeValid = function(s) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function minAddToMakeValid(s: string): number {\n    \n};"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinAddToMakeValid(string s) {\n        \n    }\n}"},{"value":"c","text":"C","defaultCode":"int minAddToMakeValid(char* s) {\n    \n}"},{"value":"golang","text":"Go","defaultCode":"func minAddToMakeValid(s string) int {\n    \n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minAddToMakeValid(s: String): Int {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minAddToMakeValid(_ s: String) -> Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn min_add_to_make_valid(s: String) -> i32 {\n        \n    }\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Integer}\ndef min_add_to_make_valid(s)\n    \nend"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function minAddToMakeValid($s) {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int minAddToMakeValid(String s) {\n    \n  }\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minAddToMakeValid(s: String): Int = {\n        \n    }\n}"},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec min_add_to_make_valid(s :: String.t) :: integer\n  def min_add_to_make_valid(s) do\n    \n  end\nend"},{"value":"erlang","text":"Erlang","defaultCode":"-spec min_add_to_make_valid(S :: unicode:unicode_binary()) -> integer().\nmin_add_to_make_valid(S) ->\n  ."},{"value":"racket","text":"Racket","defaultCode":"(define/contract (min-add-to-make-valid s)\n  (-> string? exact-integer?)\n  )"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func minAddToMakeValid(s: String): Int64 {\n\n    }\n}"}],"testcase":"\"())\"","testable":true,"templateMeta":{"name":"minAddToMakeValid","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}