{"id":395,"fid":"395","name":"至少有 K 个重复字符的最长子串","slug":"longest-substring-with-at-least-k-repeating-characters","link":"https://leetcode.cn/problems/longest-substring-with-at-least-k-repeating-characters/description/","percent":53.04085067319461,"level":"Medium","category":"algorithms","en_name":"Longest Substring with At Least K Repeating Characters","cn_name":"至少有 K 个重复字符的最长子串","totalAC":"111.2K","totalSubmit":"209.6K","likes":983,"dislikes":0,"desc":"<p>给你一个字符串 <code>s</code> 和一个整数 <code>k</code> ，请你找出 <code>s</code> 中的最长子串，&nbsp;要求该子串中的每一字符出现次数都不少于 <code>k</code> 。返回这一子串的长度。</p>\n\n<p data-pm-slice=\"1 1 []\">如果不存在这样的子字符串，则返回 0。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"aaabb\", k = 3\n<strong>输出：</strong>3\n<strong>解释：</strong>最长子串为 \"aaa\" ，其中 'a' 重复了 3 次。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>s = \"ababbc\", k = 2\n<strong>输出：</strong>5\n<strong>解释：</strong>最长子串为 \"ababb\" ，其中 'a' 重复了 2 次， 'b' 重复了 3 次。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code> 仅由小写英文字母组成</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int longestSubstring(string s, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int longestSubstring(String s, int k) {\n        \n    }\n}"},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def longestSubstring(self, s: str, k: int) -> int:\n        "},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def longestSubstring(self, s, k):\n        \"\"\"\n        :type s: str\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */\nvar longestSubstring = function(s, k) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function longestSubstring(s: string, k: number): number {\n    \n};"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int LongestSubstring(string s, int k) {\n        \n    }\n}"},{"value":"c","text":"C","defaultCode":"int longestSubstring(char* s, int k) {\n    \n}"},{"value":"golang","text":"Go","defaultCode":"func longestSubstring(s string, k int) int {\n    \n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun longestSubstring(s: String, k: Int): Int {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func longestSubstring(_ s: String, _ k: Int) -> Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn longest_substring(s: String, k: i32) -> i32 {\n        \n    }\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef longest_substring(s, k)\n    \nend"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestSubstring($s, $k) {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int longestSubstring(String s, int k) {\n    \n  }\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def longestSubstring(s: String, k: Int): Int = {\n        \n    }\n}"},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec longest_substring(s :: String.t, k :: integer) :: integer\n  def longest_substring(s, k) do\n    \n  end\nend"},{"value":"erlang","text":"Erlang","defaultCode":"-spec longest_substring(S :: unicode:unicode_binary(), K :: integer()) -> integer().\nlongest_substring(S, K) ->\n  ."},{"value":"racket","text":"Racket","defaultCode":"(define/contract (longest-substring s k)\n  (-> string? exact-integer? exact-integer?)\n  )"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func longestSubstring(s: String, k: Int64): Int64 {\n\n    }\n}"}],"testcase":"\"aaabb\"\n3","testable":true,"templateMeta":{"name":"longestSubstring","params":[{"name":"s","type":"string"},{"name":"k","type":"integer"}],"return":{"type":"integer"}}}