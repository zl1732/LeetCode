{"id":162,"fid":"162","name":"寻找峰值","slug":"find-peak-element","link":"https://leetcode.cn/problems/find-peak-element/description/","percent":49.721692941205134,"level":"Medium","category":"algorithms","en_name":"Find Peak Element","cn_name":"寻找峰值","totalAC":"510.2K","totalSubmit":"1M","likes":1449,"dislikes":0,"desc":"<p>峰值元素是指其值严格大于左右相邻值的元素。</p>\n\n<p>给你一个整数数组&nbsp;<code>nums</code>，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 <strong>任何一个峰值</strong> 所在位置即可。</p>\n\n<p>你可以假设&nbsp;<code>nums[-1] = nums[n] = -∞</code> 。</p>\n\n<p>你必须实现时间复杂度为 <code>O(log n)</code><em> </em>的算法来解决此问题。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = <code>[1,2,3,1]</code>\n<strong>输出：</strong>2\n<strong>解释：</strong>3 是峰值元素，你的函数应该返回其索引 2。</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = <code>[</code>1,2,1,3,5,6,4]\n<strong>输出：</strong>1 或 5 \n<strong>解释：</strong>你的函数可以返回索引 1，其峰值元素为 2；\n&nbsp;    或者返回索引 5， 其峰值元素为 6。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>对于所有有效的 <code>i</code> 都有 <code>nums[i] != nums[i + 1]</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int findPeakElement(int[] nums) {\n        \n    }\n}"},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def findPeakElement(self, nums: List[int]) -> int:\n        "},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def findPeakElement(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar findPeakElement = function(nums) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function findPeakElement(nums: number[]): number {\n    \n};"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int FindPeakElement(int[] nums) {\n        \n    }\n}"},{"value":"c","text":"C","defaultCode":"int findPeakElement(int* nums, int numsSize) {\n    \n}"},{"value":"golang","text":"Go","defaultCode":"func findPeakElement(nums []int) int {\n    \n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun findPeakElement(nums: IntArray): Int {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func findPeakElement(_ nums: [Int]) -> Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn find_peak_element(nums: Vec<i32>) -> i32 {\n        \n    }\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Integer}\ndef find_peak_element(nums)\n    \nend"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function findPeakElement($nums) {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int findPeakElement(List<int> nums) {\n    \n  }\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def findPeakElement(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec find_peak_element(nums :: [integer]) :: integer\n  def find_peak_element(nums) do\n    \n  end\nend"},{"value":"erlang","text":"Erlang","defaultCode":"-spec find_peak_element(Nums :: [integer()]) -> integer().\nfind_peak_element(Nums) ->\n  ."},{"value":"racket","text":"Racket","defaultCode":"(define/contract (find-peak-element nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func findPeakElement(nums: Array<Int64>): Int64 {\n\n    }\n}"}],"testcase":"[1,2,3,1]","testable":true,"templateMeta":{"name":"findPeakElement","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}